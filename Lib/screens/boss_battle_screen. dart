import 'package:flutter/material.dart';
import 'package:solo_leveling/models/player.dart';

class Boss {
  final String name;
  final int requiredLevel;
  final int hp;

  Boss({required this.name, required this.requiredLevel, required this.hp});
}

class BossBattleScreen extends StatelessWidget {
  final Player player;

  BossBattleScreen({super.key, required this.player});

  final List<Boss> bosses = [
    Boss(name: 'Kang Taeshik', requiredLevel: 25, hp: 1000),
    Boss(name: 'Cerberus', requiredLevel: 30, hp: 1500),
    Boss(name: 'Baruka', requiredLevel: 35, hp: 2000),
    Boss(name: 'Igris', requiredLevel: 40, hp: 2500),
    Boss(name: 'Iron', requiredLevel: 45, hp: 3000),
    Boss(name: 'Esil Radiru', requiredLevel: 50, hp: 4000),
    Boss(name: 'Ant King', requiredLevel: 55, hp: 5000),
    Boss(name: 'Beru', requiredLevel: 60, hp: 6500),
    Boss(name: 'Kamish Remnant', requiredLevel: 65, hp: 8000),
    Boss(name: 'Sung Il-Hwan', requiredLevel: 70, hp: 10000),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        title: const Text('Boss Battles', style: TextStyle(color: Colors.white)),
        backgroundColor: Colors.black,
        centerTitle: true,
      ),
      body: ListView.builder(
        itemCount: bosses.length,
        itemBuilder: (context, index) {
          final boss = bosses[index];
          final canFight = player.level >= boss.requiredLevel;
          return Card(
            color: Colors.grey[900],
            margin: const EdgeInsets.all(10),
            child: ListTile(
              title: Text(
                boss.name,
                style: const TextStyle(color: Colors.white, fontSize: 18),
              ),
              subtitle: Text(
                'Required Level: ${boss.requiredLevel} | HP: ${boss.hp}',
                style: const TextStyle(color: Colors.grey),
              ),
              trailing: ElevatedButton(
                onPressed: canFight
                    ? () {
                        final damage = player.strength * 10;
                        final turns = (boss.hp / damage).ceil();

                        showDialog(
                          context: context,
                          builder: (context) => AlertDialog(
                            backgroundColor: Colors.grey[900],
                            title: Text('Battle Result', style: TextStyle(color: Colors.white)),
                            content: Text(
                              'You defeated ${boss.name} in $turns turns!',
                              style: TextStyle(color: Colors.white),
                            ),
                            actions: [
                              TextButton(
                                onPressed: () => Navigator.pop(context),
                                child: const Text('OK', style: TextStyle(color: Colors.blue)),
                              ),
                            ],
                          ),
                        );
                      }
                    : null,
                style: ElevatedButton.styleFrom(
                  backgroundColor: canFight ? Colors.red : Colors.grey,
                ),
                child: const Text('Fight'),
              ),
            ),
          );
        },
      ),
    );
  }
}
